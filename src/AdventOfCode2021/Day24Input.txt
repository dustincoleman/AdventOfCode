//********************* [0] ************************
inp w

// x = z % 26 => 0
mul x 0
add x z
mod x 26

// z = z / 1 => z => 0
div z 1

// x = (z % 26) + 12 => 12
add x 12

// x = (x == w) ? 1 : 0 => (12 == 1..9) => 0
eql x w

// x = (x == 0) ? 1 : 0 => 1
eql x 0

// y = (25 * x) + 1 => 26
mul y 0
add y 25
mul y x
add y 1

// z = z * y => 0 * 26 => 0
mul z y

// y = (w + 4) * x => (1..9 + 4) * 1 + 5..13
mul y 0
add y w
add y 4
mul y x

// z += y => input[0] + 4
add z y

// ********************* [1] ************************

inp w

// x = z % 26 => 5..13
mul x 0
add x z
mod x 26

// z = z / 1 => 5..13
div z 1

// x = x + 15 => 20..38
add x 15

// x = (x == w) ? 1 : 0 => (20..38 == 1..9) => 0
eql x w

// x = (x == 0) ? 1 : 0 => 1
eql x 0

// y = (25 * x) + 1 => 26
mul y 0
add y 25
mul y x
add y 1

// z = z * y => (5..13 * 26)
mul z y

// y = (w + 11) * x => (1..9 + 11) * 1 => 12..20
mul y 0
add y w
add y 11
mul y x

// z += y => ((input[0] + 4) * 26) + input[1] + 11
add z y

// ********************* [2] ************************

inp w

// x = z % 26 => (((input[0] + 4) * 26) + input[1] + 11) % 26 => (input[1] + 11) % 26 => 12..20
mul x 0
add x z
mod x 26

// z = z / 1 => z => ((input[0] + 4) * 26) + input[1] + 11
div z 1

// x = x + 11 => (input[1] + 22)
add x 11

// x = (x == w) ? 1 : 0 => 0
eql x w

// x = 1
eql x 0

// y = (25 * x) + 1 => 26
mul y 0
add y 25
mul y x
add y 1

// z = z * y => (((input[0] + 4) * 26) + input[1] + 11) * 26
mul z y

// y = (w + 7) * x => input[2] + 7
mul y 0
add y w
add y 7
mul y x

// z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[2] + 7
add z y

// ********************* [3] ************************

inp w

// x = z % 26 => (((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[2] + 7) % 26 => input[2] + 7
mul x 0
add x z
mod x 26

// z = z / 26 => (((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[2] + 7) / 26 => ((((input[0] + 4) * 26) + input[1] + 11) * 26) / 26 + (input[2] + 7) / 26 => (((input[0] + 4) * 26) + input[1] + 11) => Z[1]
div z 26

// x = x - 14 => input[2] + 7 - 14 => input[2] - 7 
add x -14

// x = (x == w) ? 1 : 0 => (input[2] - 7 == input[3]) ? 0 : 1
eql x w
eql x 0

// y = (25 * x) + 1 
mul y 0
add y 25
mul y x
add y 1

// z = z * y
mul z y

// y = (w + 2) * x
mul y 0
add y w
add y 2
mul y x

// z = z + y
// (input[2] - 7 == input[3]) ==> z = ((input[0] + 4) * 26) + input[1] + 11
add z y

// ********************* [4] ************************
inp w

// x = z % 26 => (((input[0] + 4) * 26) + input[1] + 11) % 26 => input[1] + 11
mul x 0
add x z
mod x 26

// z = z / 1
div z 1

// x = (input[1] + 11) + 12
add x 12

// x = 1
eql x w
eql x 0

// y = 26
mul y 0
add y 25
mul y x
add y 1

// z = (((input[0] + 4) * 26) + input[1] + 11) * 26
mul z y

// y = input[4] + 11
mul y 0
add y w
add y 11
mul y x

// z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[4] + 11
add z y

// ********************* [5] ************************
inp w

// x = input[4] + 11
mul x 0
add x z
mod x 26

// z = ((input[0] + 4) * 26) + input[1] + 11
div z 26

// x = input[4] + 1
add x -10

// x = (input[4] + 1 == input[5]) ? 0 : 1
eql x w
eql x 0

// (input[4] + 1 == input[5]) => y = 1
mul y 0
add y 25
mul y x
add y 1

// z = ((input[0] + 4) * 26) + input[1] + 11
mul z y

// (input[4] + 1 == input[5]) => y = 0
mul y 0
add y w
add y 13
mul y x

// (input[4] + 1 == input[5]) => ((input[0] + 4) * 26) + input[1] + 11
add z y

// ********************* [6] ************************
inp w

// x = input[1] + 11
mul x 0
add x z
mod x 26

div z 1

// x = input[1] + 22
add x 11

// x = 1
eql x w
eql x 0

// y = 26
mul y 0
add y 25
mul y x
add y 1

// z = (((input[0] + 4) * 26) + input[1] + 11) * 26
mul z y

// y = input[6] + 9
mul y 0
add y w
add y 9
mul y x

// z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9
add z y

// ********************* [7] ************************
inp w

mul x 0
add x z
mod x 26

div z 1

// x = input[7] + 22
add x 13

// x = 1
eql x w
eql x 0

// y = 26
mul y 0
add y 25
mul y x
add y 1

// z = (((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9) * 26
mul z y

// y = input[7] + 12
mul y 0
add y w
add y 12
mul y x

// z = ((((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9) * 26) + input[7] + 12
add z y

// ********************* [8] ************************
inp w

// x = input[7] + 12
mul x 0
add x z
mod x 26

// z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9
div z 26

// x = input[7] + 5
add x -7

// (input[7] + 5 == input[8]) => x = 0
eql x w
eql x 0

// (input[7] + 5 == input[8]) => y = 1
mul y 0
add y 25
mul y x
add y 1

// z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9
mul z y

// (input[7] + 5 == input[8]) => y = 0
mul y 0
add y w
add y 6
mul y x

// (input[7] + 5 == input[8]) => z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9
add z y

// ********************* [9] ************************
inp w

// x = input[6] + 9
mul x 0
add x z
mod x 26

div z 1

// x = input[6] + 19
add x 10

// x = 1
eql x w
eql x 0

// y = 26
mul y 0
add y 25
mul y x
add y 1

// z = (((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9) * 26
mul z y

// y = input[9] + 2
mul y 0
add y w
add y 2
mul y x

// z = ((((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9) * 26) + input[9] + 2
add z y

// ********************* [10] ************************
inp w

// x = input[9] + 2
mul x 0
add x z
mod x 26

// z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9
div z 26

// x = input[9]
add x -2

// (input[9] == input[10]) => x = 0
eql x w
eql x 0

// (input[9] == input[10]) => y = 1
mul y 0
add y 25
mul y x
add y 1

// z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9
mul z y

// (input[9] == input[10]) => y = 0
mul y 0
add y w
add y 11
mul y x

// (input[9] == input[10]) => z = ((((input[0] + 4) * 26) + input[1] + 11) * 26) + input[6] + 9
add z y

// ********************* [11] ************************
inp w

// x = input[6] + 9
mul x 0
add x z
mod x 26

// z = ((input[0] + 4) * 26) + input[1] + 11
div z 26

// x = input[6] + 8
add x -1

// (input[6] + 8 == input[11]) => x = 0
eql x w
eql x 0

// (input[6] + 8 == input[11]) => y = 1
mul y 0
add y 25
mul y x
add y 1

// (input[6] + 8 == input[11]) => z = ((input[0] + 4) * 26) + input[1] + 11
mul z y

// (input[6] + 8 == input[11]) => y = 0
mul y 0
add y w
add y 12
mul y x

// (input[6] + 8 == input[11]) => z = ((input[0] + 4) * 26) + input[1] + 11
add z y

// ********************* [12] ************************
inp w

// x = input[1] + 11
mul x 0
add x z
mod x 26

// z = input[0] + 4
div z 26

// x = input[1] + 7
add x -4

// (input[1] + 7 == input[12]) => x = 0
eql x w
eql x 0

// (input[1] + 7 == input[12]) => y = 1
mul y 0
add y 25
mul y x
add y 1

// (input[1] + 7 == input[12]) => z = input[0] + 4
mul z y

// (input[1] + 7 == input[12]) => y = 0
mul y 0
add y w
add y 3
mul y x

// (input[1] + 7 == input[12]) => z = input[0] + 4
add z y

// ********************* [13] ************************
inp w

// x = input[0] + 4
mul x 0
add x z
mod x 26

// z = 0
div z 26

// x = input[0] - 8
add x -12

// (input[0] - 8 == input[13]) => x = 0
eql x w
eql x 0

// (input[0] - 8 == input[13]) => y = 1
mul y 0
add y 25
mul y x
add y 1

// (input[0] - 8 == input[13]) => z = 0
mul z y

// (input[0] - 8 == input[13]) => y = 0
mul y 0
add y w
add y 13
mul y x

// (input[0] - 8 == input[13]) => z = 0
add z y